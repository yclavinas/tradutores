State 43 conflicts: 1 reduce/reduce
State 55 conflicts: 1 reduce/reduce
State 56 conflicts: 1 reduce/reduce
State 62 conflicts: 3 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: programa $end

    1 programa: type CLASS '(' var_declaration ')' '{' var_declaration lista_cmds '}'

    2 var_declaration: var
    3                | var ',' var_declaration
    4                | /* empty */

    5 var: type ID

    6 type: BOOLEAN
    7     | INT
    8     | INT '[' ']'

    9 lista_cmds: cmd
   10           | cmd lista_cmds

   11 cmd: ID ATRIBUICAO exp
   12    | ID '[' exp ']' ATRIBUICAO exp
   13    | IF '(' exp ')' '{' lista_cmds '}' ELSE '{' lista_cmds '}'
   14    | WHILE '(' exp ')' '{' lista_cmds '}'
   15    | ESCREVA '(' exp ')'

   16 @1: /* empty */

   17 @2: /* empty */

   18 @3: /* empty */

   19 exp: exp @1 ARITMETICO exp @2 @3
   20    | exp RELACIONAL exp
   21    | exp AND exp
   22    | exp ABRE_COLCHETE exp FECHA_COLCHETE
   23    | ID
   24    | NOT exp
   25    | NUM
   26    | '(' exp ')'
   27    | 'true'
   28    | 'false'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 1 13 14 15 26
')' (41) 1 13 14 15 26
',' (44) 3
'[' (91) 8 12
']' (93) 8 12
'false' (102) 28
'true' (116) 27
'{' (123) 1 13 14
'}' (125) 1 13 14
error (256)
ABRE_COLCHETE (258) 22
AND (259) 21
ARITMETICO (260) 19
ATRIBUICAO (261) 11 12
BOOLEAN (262) 6
CLASS (263) 1
ELSE (264) 13
FECHA_COLCHETE (265) 22
ID (266) 5 11 12 23
IF (267) 13
INT (268) 7 8
NUM (269) 25
NOT (270) 24
RELACIONAL (271) 20
WHILE (272) 14
ESCREVA (273) 15


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
programa (29)
    on left: 1, on right: 0
var_declaration (30)
    on left: 2 3 4, on right: 1 3
var (31)
    on left: 5, on right: 2 3
type (32)
    on left: 6 7 8, on right: 1 5
lista_cmds (33)
    on left: 9 10, on right: 1 10 13 14
cmd (34)
    on left: 11 12 13 14 15, on right: 9 10
exp (35)
    on left: 19 20 21 22 23 24 25 26 27 28, on right: 11 12 13 14 15
    19 20 21 22 24 26
@1 (36)
    on left: 16, on right: 19
@2 (37)
    on left: 17, on right: 19
@3 (38)
    on left: 18, on right: 19


state 0

    0 $accept: . programa $end

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2

    programa  go to state 3
    type      go to state 4


state 1

    6 type: BOOLEAN .

    $default  reduce using rule 6 (type)


state 2

    7 type: INT .
    8     | INT . '[' ']'

    '['  shift, and go to state 5

    $default  reduce using rule 7 (type)


state 3

    0 $accept: programa . $end

    $end  shift, and go to state 6


state 4

    1 programa: type . CLASS '(' var_declaration ')' '{' var_declaration lista_cmds '}'

    CLASS  shift, and go to state 7


state 5

    8 type: INT '[' . ']'

    ']'  shift, and go to state 8


state 6

    0 $accept: programa $end .

    $default  accept


state 7

    1 programa: type CLASS . '(' var_declaration ')' '{' var_declaration lista_cmds '}'

    '('  shift, and go to state 9


state 8

    8 type: INT '[' ']' .

    $default  reduce using rule 8 (type)


state 9

    1 programa: type CLASS '(' . var_declaration ')' '{' var_declaration lista_cmds '}'

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2

    $default  reduce using rule 4 (var_declaration)

    var_declaration  go to state 10
    var              go to state 11
    type             go to state 12


state 10

    1 programa: type CLASS '(' var_declaration . ')' '{' var_declaration lista_cmds '}'

    ')'  shift, and go to state 13


state 11

    2 var_declaration: var .
    3                | var . ',' var_declaration

    ','  shift, and go to state 14

    $default  reduce using rule 2 (var_declaration)


state 12

    5 var: type . ID

    ID  shift, and go to state 15


state 13

    1 programa: type CLASS '(' var_declaration ')' . '{' var_declaration lista_cmds '}'

    '{'  shift, and go to state 16


state 14

    3 var_declaration: var ',' . var_declaration

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2

    $default  reduce using rule 4 (var_declaration)

    var_declaration  go to state 17
    var              go to state 11
    type             go to state 12


state 15

    5 var: type ID .

    $default  reduce using rule 5 (var)


state 16

    1 programa: type CLASS '(' var_declaration ')' '{' . var_declaration lista_cmds '}'

    BOOLEAN  shift, and go to state 1
    INT      shift, and go to state 2

    $default  reduce using rule 4 (var_declaration)

    var_declaration  go to state 18
    var              go to state 11
    type             go to state 12


state 17

    3 var_declaration: var ',' var_declaration .

    $default  reduce using rule 3 (var_declaration)


state 18

    1 programa: type CLASS '(' var_declaration ')' '{' var_declaration . lista_cmds '}'

    ID       shift, and go to state 19
    IF       shift, and go to state 20
    WHILE    shift, and go to state 21
    ESCREVA  shift, and go to state 22

    lista_cmds  go to state 23
    cmd         go to state 24


state 19

   11 cmd: ID . ATRIBUICAO exp
   12    | ID . '[' exp ']' ATRIBUICAO exp

    ATRIBUICAO  shift, and go to state 25
    '['         shift, and go to state 26


state 20

   13 cmd: IF . '(' exp ')' '{' lista_cmds '}' ELSE '{' lista_cmds '}'

    '('  shift, and go to state 27


state 21

   14 cmd: WHILE . '(' exp ')' '{' lista_cmds '}'

    '('  shift, and go to state 28


state 22

   15 cmd: ESCREVA . '(' exp ')'

    '('  shift, and go to state 29


state 23

    1 programa: type CLASS '(' var_declaration ')' '{' var_declaration lista_cmds . '}'

    '}'  shift, and go to state 30


state 24

    9 lista_cmds: cmd .
   10           | cmd . lista_cmds

    ID       shift, and go to state 19
    IF       shift, and go to state 20
    WHILE    shift, and go to state 21
    ESCREVA  shift, and go to state 22

    $default  reduce using rule 9 (lista_cmds)

    lista_cmds  go to state 31
    cmd         go to state 24


state 25

   11 cmd: ID ATRIBUICAO . exp

    ID       shift, and go to state 32
    NUM      shift, and go to state 33
    NOT      shift, and go to state 34
    '('      shift, and go to state 35
    'true'   shift, and go to state 36
    'false'  shift, and go to state 37

    exp  go to state 38


state 26

   12 cmd: ID '[' . exp ']' ATRIBUICAO exp

    ID       shift, and go to state 32
    NUM      shift, and go to state 33
    NOT      shift, and go to state 34
    '('      shift, and go to state 35
    'true'   shift, and go to state 36
    'false'  shift, and go to state 37

    exp  go to state 39


state 27

   13 cmd: IF '(' . exp ')' '{' lista_cmds '}' ELSE '{' lista_cmds '}'

    ID       shift, and go to state 32
    NUM      shift, and go to state 33
    NOT      shift, and go to state 34
    '('      shift, and go to state 35
    'true'   shift, and go to state 36
    'false'  shift, and go to state 37

    exp  go to state 40


state 28

   14 cmd: WHILE '(' . exp ')' '{' lista_cmds '}'

    ID       shift, and go to state 32
    NUM      shift, and go to state 33
    NOT      shift, and go to state 34
    '('      shift, and go to state 35
    'true'   shift, and go to state 36
    'false'  shift, and go to state 37

    exp  go to state 41


state 29

   15 cmd: ESCREVA '(' . exp ')'

    ID       shift, and go to state 32
    NUM      shift, and go to state 33
    NOT      shift, and go to state 34
    '('      shift, and go to state 35
    'true'   shift, and go to state 36
    'false'  shift, and go to state 37

    exp  go to state 42


state 30

    1 programa: type CLASS '(' var_declaration ')' '{' var_declaration lista_cmds '}' .

    $default  reduce using rule 1 (programa)


state 31

   10 lista_cmds: cmd lista_cmds .

    $default  reduce using rule 10 (lista_cmds)


state 32

   23 exp: ID .

    $default  reduce using rule 23 (exp)


state 33

   25 exp: NUM .

    $default  reduce using rule 25 (exp)


state 34

   24 exp: NOT . exp

    ID       shift, and go to state 32
    NUM      shift, and go to state 33
    NOT      shift, and go to state 34
    '('      shift, and go to state 35
    'true'   shift, and go to state 36
    'false'  shift, and go to state 37

    exp  go to state 43


state 35

   26 exp: '(' . exp ')'

    ID       shift, and go to state 32
    NUM      shift, and go to state 33
    NOT      shift, and go to state 34
    '('      shift, and go to state 35
    'true'   shift, and go to state 36
    'false'  shift, and go to state 37

    exp  go to state 44


state 36

   27 exp: 'true' .

    $default  reduce using rule 27 (exp)


state 37

   28 exp: 'false' .

    $default  reduce using rule 28 (exp)


state 38

   11 cmd: ID ATRIBUICAO exp .
   19 exp: exp . @1 ARITMETICO exp @2 @3
   20    | exp . RELACIONAL exp
   21    | exp . AND exp
   22    | exp . ABRE_COLCHETE exp FECHA_COLCHETE

    ABRE_COLCHETE  shift, and go to state 45
    AND            shift, and go to state 46
    RELACIONAL     shift, and go to state 47

    ARITMETICO  reduce using rule 16 (@1)
    $default    reduce using rule 11 (cmd)

    @1  go to state 48


state 39

   12 cmd: ID '[' exp . ']' ATRIBUICAO exp
   19 exp: exp . @1 ARITMETICO exp @2 @3
   20    | exp . RELACIONAL exp
   21    | exp . AND exp
   22    | exp . ABRE_COLCHETE exp FECHA_COLCHETE

    ABRE_COLCHETE  shift, and go to state 45
    AND            shift, and go to state 46
    RELACIONAL     shift, and go to state 47
    ']'            shift, and go to state 49

    $default  reduce using rule 16 (@1)

    @1  go to state 48


state 40

   13 cmd: IF '(' exp . ')' '{' lista_cmds '}' ELSE '{' lista_cmds '}'
   19 exp: exp . @1 ARITMETICO exp @2 @3
   20    | exp . RELACIONAL exp
   21    | exp . AND exp
   22    | exp . ABRE_COLCHETE exp FECHA_COLCHETE

    ABRE_COLCHETE  shift, and go to state 45
    AND            shift, and go to state 46
    RELACIONAL     shift, and go to state 47
    ')'            shift, and go to state 50

    $default  reduce using rule 16 (@1)

    @1  go to state 48


state 41

   14 cmd: WHILE '(' exp . ')' '{' lista_cmds '}'
   19 exp: exp . @1 ARITMETICO exp @2 @3
   20    | exp . RELACIONAL exp
   21    | exp . AND exp
   22    | exp . ABRE_COLCHETE exp FECHA_COLCHETE

    ABRE_COLCHETE  shift, and go to state 45
    AND            shift, and go to state 46
    RELACIONAL     shift, and go to state 47
    ')'            shift, and go to state 51

    $default  reduce using rule 16 (@1)

    @1  go to state 48


state 42

   15 cmd: ESCREVA '(' exp . ')'
   19 exp: exp . @1 ARITMETICO exp @2 @3
   20    | exp . RELACIONAL exp
   21    | exp . AND exp
   22    | exp . ABRE_COLCHETE exp FECHA_COLCHETE

    ABRE_COLCHETE  shift, and go to state 45
    AND            shift, and go to state 46
    RELACIONAL     shift, and go to state 47
    ')'            shift, and go to state 52

    $default  reduce using rule 16 (@1)

    @1  go to state 48


state 43

   19 exp: exp . @1 ARITMETICO exp @2 @3
   20    | exp . RELACIONAL exp
   21    | exp . AND exp
   22    | exp . ABRE_COLCHETE exp FECHA_COLCHETE
   24    | NOT exp .

    RELACIONAL  shift, and go to state 47

    ARITMETICO  reduce using rule 16 (@1)
    ARITMETICO  [reduce using rule 24 (exp)]
    $default    reduce using rule 24 (exp)

    @1  go to state 48


state 44

   19 exp: exp . @1 ARITMETICO exp @2 @3
   20    | exp . RELACIONAL exp
   21    | exp . AND exp
   22    | exp . ABRE_COLCHETE exp FECHA_COLCHETE
   26    | '(' exp . ')'

    ABRE_COLCHETE  shift, and go to state 45
    AND            shift, and go to state 46
    RELACIONAL     shift, and go to state 47
    ')'            shift, and go to state 53

    $default  reduce using rule 16 (@1)

    @1  go to state 48


state 45

   22 exp: exp ABRE_COLCHETE . exp FECHA_COLCHETE

    ID       shift, and go to state 32
    NUM      shift, and go to state 33
    NOT      shift, and go to state 34
    '('      shift, and go to state 35
    'true'   shift, and go to state 36
    'false'  shift, and go to state 37

    exp  go to state 54


state 46

   21 exp: exp AND . exp

    ID       shift, and go to state 32
    NUM      shift, and go to state 33
    NOT      shift, and go to state 34
    '('      shift, and go to state 35
    'true'   shift, and go to state 36
    'false'  shift, and go to state 37

    exp  go to state 55


state 47

   20 exp: exp RELACIONAL . exp

    ID       shift, and go to state 32
    NUM      shift, and go to state 33
    NOT      shift, and go to state 34
    '('      shift, and go to state 35
    'true'   shift, and go to state 36
    'false'  shift, and go to state 37

    exp  go to state 56


state 48

   19 exp: exp @1 . ARITMETICO exp @2 @3

    ARITMETICO  shift, and go to state 57


state 49

   12 cmd: ID '[' exp ']' . ATRIBUICAO exp

    ATRIBUICAO  shift, and go to state 58


state 50

   13 cmd: IF '(' exp ')' . '{' lista_cmds '}' ELSE '{' lista_cmds '}'

    '{'  shift, and go to state 59


state 51

   14 cmd: WHILE '(' exp ')' . '{' lista_cmds '}'

    '{'  shift, and go to state 60


state 52

   15 cmd: ESCREVA '(' exp ')' .

    $default  reduce using rule 15 (cmd)


state 53

   26 exp: '(' exp ')' .

    $default  reduce using rule 26 (exp)


state 54

   19 exp: exp . @1 ARITMETICO exp @2 @3
   20    | exp . RELACIONAL exp
   21    | exp . AND exp
   22    | exp . ABRE_COLCHETE exp FECHA_COLCHETE
   22    | exp ABRE_COLCHETE exp . FECHA_COLCHETE

    ABRE_COLCHETE   shift, and go to state 45
    AND             shift, and go to state 46
    FECHA_COLCHETE  shift, and go to state 61
    RELACIONAL      shift, and go to state 47

    $default  reduce using rule 16 (@1)

    @1  go to state 48


state 55

   19 exp: exp . @1 ARITMETICO exp @2 @3
   20    | exp . RELACIONAL exp
   21    | exp . AND exp
   21    | exp AND exp .
   22    | exp . ABRE_COLCHETE exp FECHA_COLCHETE

    RELACIONAL  shift, and go to state 47

    ARITMETICO  reduce using rule 16 (@1)
    ARITMETICO  [reduce using rule 21 (exp)]
    $default    reduce using rule 21 (exp)

    @1  go to state 48


state 56

   19 exp: exp . @1 ARITMETICO exp @2 @3
   20    | exp . RELACIONAL exp
   20    | exp RELACIONAL exp .
   21    | exp . AND exp
   22    | exp . ABRE_COLCHETE exp FECHA_COLCHETE

    ARITMETICO  reduce using rule 16 (@1)
    ARITMETICO  [reduce using rule 20 (exp)]
    $default    reduce using rule 20 (exp)

    @1  go to state 48


state 57

   19 exp: exp @1 ARITMETICO . exp @2 @3

    ID       shift, and go to state 32
    NUM      shift, and go to state 33
    NOT      shift, and go to state 34
    '('      shift, and go to state 35
    'true'   shift, and go to state 36
    'false'  shift, and go to state 37

    exp  go to state 62


state 58

   12 cmd: ID '[' exp ']' ATRIBUICAO . exp

    ID       shift, and go to state 32
    NUM      shift, and go to state 33
    NOT      shift, and go to state 34
    '('      shift, and go to state 35
    'true'   shift, and go to state 36
    'false'  shift, and go to state 37

    exp  go to state 63


state 59

   13 cmd: IF '(' exp ')' '{' . lista_cmds '}' ELSE '{' lista_cmds '}'

    ID       shift, and go to state 19
    IF       shift, and go to state 20
    WHILE    shift, and go to state 21
    ESCREVA  shift, and go to state 22

    lista_cmds  go to state 64
    cmd         go to state 24


state 60

   14 cmd: WHILE '(' exp ')' '{' . lista_cmds '}'

    ID       shift, and go to state 19
    IF       shift, and go to state 20
    WHILE    shift, and go to state 21
    ESCREVA  shift, and go to state 22

    lista_cmds  go to state 65
    cmd         go to state 24


state 61

   22 exp: exp ABRE_COLCHETE exp FECHA_COLCHETE .

    $default  reduce using rule 22 (exp)


state 62

   19 exp: exp . @1 ARITMETICO exp @2 @3
   19    | exp @1 ARITMETICO exp . @2 @3
   20    | exp . RELACIONAL exp
   21    | exp . AND exp
   22    | exp . ABRE_COLCHETE exp FECHA_COLCHETE

    ABRE_COLCHETE  shift, and go to state 45
    AND            shift, and go to state 46
    RELACIONAL     shift, and go to state 47

    ABRE_COLCHETE  [reduce using rule 17 (@2)]
    AND            [reduce using rule 17 (@2)]
    ARITMETICO     reduce using rule 16 (@1)
    ARITMETICO     [reduce using rule 17 (@2)]
    RELACIONAL     [reduce using rule 17 (@2)]
    $default       reduce using rule 17 (@2)

    @1  go to state 48
    @2  go to state 66


state 63

   12 cmd: ID '[' exp ']' ATRIBUICAO exp .
   19 exp: exp . @1 ARITMETICO exp @2 @3
   20    | exp . RELACIONAL exp
   21    | exp . AND exp
   22    | exp . ABRE_COLCHETE exp FECHA_COLCHETE

    ABRE_COLCHETE  shift, and go to state 45
    AND            shift, and go to state 46
    RELACIONAL     shift, and go to state 47

    ARITMETICO  reduce using rule 16 (@1)
    $default    reduce using rule 12 (cmd)

    @1  go to state 48


state 64

   13 cmd: IF '(' exp ')' '{' lista_cmds . '}' ELSE '{' lista_cmds '}'

    '}'  shift, and go to state 67


state 65

   14 cmd: WHILE '(' exp ')' '{' lista_cmds . '}'

    '}'  shift, and go to state 68


state 66

   19 exp: exp @1 ARITMETICO exp @2 . @3

    $default  reduce using rule 18 (@3)

    @3  go to state 69


state 67

   13 cmd: IF '(' exp ')' '{' lista_cmds '}' . ELSE '{' lista_cmds '}'

    ELSE  shift, and go to state 70


state 68

   14 cmd: WHILE '(' exp ')' '{' lista_cmds '}' .

    $default  reduce using rule 14 (cmd)


state 69

   19 exp: exp @1 ARITMETICO exp @2 @3 .

    $default  reduce using rule 19 (exp)


state 70

   13 cmd: IF '(' exp ')' '{' lista_cmds '}' ELSE . '{' lista_cmds '}'

    '{'  shift, and go to state 71


state 71

   13 cmd: IF '(' exp ')' '{' lista_cmds '}' ELSE '{' . lista_cmds '}'

    ID       shift, and go to state 19
    IF       shift, and go to state 20
    WHILE    shift, and go to state 21
    ESCREVA  shift, and go to state 22

    lista_cmds  go to state 72
    cmd         go to state 24


state 72

   13 cmd: IF '(' exp ')' '{' lista_cmds '}' ELSE '{' lista_cmds . '}'

    '}'  shift, and go to state 73


state 73

   13 cmd: IF '(' exp ')' '{' lista_cmds '}' ELSE '{' lista_cmds '}' .

    $default  reduce using rule 13 (cmd)
